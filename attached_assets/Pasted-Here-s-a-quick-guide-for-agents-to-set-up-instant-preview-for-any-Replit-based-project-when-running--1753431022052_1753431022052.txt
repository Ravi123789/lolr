Here's a quick guide for agents to set up instant preview for any Replit-based project when running locally:

1. **Install Required Dependencies**
```bash
npm install --save-dev nodemon concurrently
npm install cors
npm install --save-dev @types/cors
```

2. **Update package.json Scripts**
```json
"scripts": {
  "dev:server": "nodemon --watch server --ext ts,js --exec tsx server/index.ts",
  "dev:client": "vite",
  "dev": "concurrently \"npm run dev:server\" \"npm run dev:client\""
}
```

3. **Modify vite.config.ts**
```typescript
export default defineConfig({
  plugins: [
    react(),
    runtimeErrorOverlay(),
  ],
  server: {
    host: true,
    port: 5173,
    strictPort: false,
    proxy: {
      '/api': {
        target: 'http://localhost:3000',
        changeOrigin: true,
      }
    }
  }
});
```

4. **Update server/index.ts**
```typescript
import cors from "cors";

const app = express();
app.use(cors());  // Add CORS support
app.use(express.json());

// ... rest of the code ...

server.listen(port, "localhost", () => {
  log(`Server running in ${app.get("env")} mode on port ${port}`);
  if (isDev) {
    log(`API available at http://localhost:${port}/api`);
    log(`Frontend available at http://localhost:5173`);
  }
});
```

5. **Make Database Optional in server/db.ts**
```typescript
let pool: Pool | null = null;
let db: any = null;

if (process.env.DATABASE_URL) {
  neonConfig.webSocketConstructor = ws;
  pool = new Pool({ connectionString: process.env.DATABASE_URL });
  db = drizzle({ client: pool, schema });
}

export { pool, db };
```

6. **To Run the Project**
```bash
npm run dev
```

**Key Points for Agents:**
1. Remove Replit-specific configurations
2. Make database connections optional for local development
3. Enable CORS for local API calls
4. Set up proper host bindings for localhost
5. Configure proxy for API requests

**Expected Results:**
- Frontend: Auto-updates instantly (no refresh needed)
- Backend: Auto-restarts on changes
- No database requirement locally
- Works with direct API calls to Ethos